---
export interface Props {
  title: string;
  type: 'book' | 'article' | 'database' | 'website' | 'video';
  url?: string;
  image?: string;
  description?: string;
  author?: string;
  year?: string;
}

const { title, type, url, image, description, author, year } = Astro.props;

const typeIcons = {
  book: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
  </svg>`,
  article: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
  </svg>`,
  database: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4" />
  </svg>`,
  website: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
  </svg>`,
  video: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
  </svg>`,
};

const typeClasses = {
  book: "bg-accent-50 text-accent-800 border-accent-200",
  article: "bg-primary-50 text-primary-800 border-primary-200",
  database: "bg-secondary-50 text-secondary-800 border-secondary-200",
  website: "bg-purple-50 text-purple-800 border-purple-200",
  video: "bg-red-50 text-red-800 border-red-200",
};

const placeholderImage = "https://images.pexels.com/photos/590493/pexels-photo-590493.jpeg";
---

<div class={`rounded-lg border ${typeClasses[type]} overflow-hidden flex flex-col md:flex-row mb-6`}>
  {image && (
    <div class="w-full md:w-1/4 h-48 md:h-auto">
      <img src={image || placeholderImage} alt={title} class="w-full h-full object-cover" />
    </div>
  )}
  
  <div class="p-5 flex-grow">
    <div class="flex justify-between items-start">
      <div>
        <div class="flex items-center gap-2 mb-2">
          <span class="inline-flex items-center" set:html={typeIcons[type]} />
          <span class="text-sm uppercase font-medium">{type}</span>
        </div>
        
        <h3 class="text-lg font-semibold mb-1">
          {url ? (
            <a href={url} target="_blank" rel="noopener noreferrer" class="hover:underline">
              {title}
            </a>
          ) : title}
        </h3>
        
        {(author || year) && (
          <p class="text-sm text-gray-600 mb-2">
            {author && <span>{author}</span>}
            {author && year && <span> â€¢ </span>}
            {year && <span>{year}</span>}
          </p>
        )}
      </div>
      
      {url && (
        <a 
          href={url} 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center justify-center ml-4 px-3 py-1 rounded-full text-xs font-medium bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 transition-colors"
        >
          Access 
          <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      )}
    </div>
    
    {description && (
      <p class="text-gray-700 mt-2">{description}</p>
    )}
  </div>
</div>